{% extends "@FOSUser/layout.html.twig" %}
{% block stylesheets %}
    {{ parent() }}
    <style>.checkbox label, .radio label {
            margin-left: 0px;
        }</style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        {% if disableServiceWorker is not defined or disableServiceWorker is empty %}
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', function () {
                navigator.serviceWorker.register('{{ asset('/service-worker.js') }}').then(function (registration) {
                    // Registration was successful
                    console.log('ServiceWorker registration successful with scope: ', registration.scope);
                }, function (err) {
                    // registration failed :(
                    console.log('ServiceWorker registration failed: ', err);
                });
            });
        }
        {% endif %}

        (function ($) {

            /* ----------------------------------------------- */
            /* ----------------------------------------------- */
            /* OnLoad Page */
            $(document).ready(function ($) {
                $username = $('#username');
                $password = $('#password');
                $rememberMe = $('#remember_me');
                $form = $('form');

                {% if error %}
                localStorage.removeItem('username');
                localStorage.removeItem('password');
                {% endif %}

                if (localStorage.getItem('remembered')) {
                    $rememberMe.iCheck('check');
                    if (localStorage.getItem('username')) {
                        if (localStorage.getItem('password')) {
                            $username.val(localStorage.getItem('username'));
                            $password.val(localStorage.getItem('password'));
                            $form.submit();
                        }
                    }
                } else {
                    $rememberMe.iCheck('uncheck');
                }

                $rememberMe.on('ifChecked', function (event) {
                    localStorage.setItem('remembered', 'true');
                    console.log('checked');
                });

                $rememberMe.on('ifUnchecked', function (event) {
                    localStorage.removeItem('remembered');
                    localStorage.removeItem('username');
                    localStorage.removeItem('password');
                    console.log('unchecked');
                });

                $form.submit(function (e) {
                    if (localStorage.getItem('remembered')) {
                        localStorage.setItem('username', $username.val());
                        localStorage.setItem('password', $password.val());
                        localStorage.setItem('remembered', 'true');
                    }
                })
            });

            /* OnLoad Window */
            init = function () {

            };
            window.onload = init;

        })(jQuery);
    </script>
{% endblock %}

{% block sonata_wrapper %}
    <div class="login-box">
        <div class="login-logo">
            <a href="{{ path('sonata_admin_dashboard') }}">
                {% if admin_pool is defined %}
                    {% if 'single_text' == admin_pool.getOption('title_mode') or 'both' == admin_pool.getOption('title_mode') %}
                        <span>{{ admin_pool.title }}</span>
                    {% endif %}
                {% endif %}
            </a>
        </div>
        <div class="login-box-body">
            {% block sonata_user_login_form %}
                {% block sonata_user_login_error %}
                    {% if error %}
                        <div class="alert alert-danger">{{ error.message|trans({}, 'FOSUserBundle') }}</div>
                    {% endif %}
                {% endblock %}
                <p class="login-box-msg">{{ 'title_user_authentication'|trans({}, 'FOSUserBundle') }}</p>
                <form action="{{ path("fos_user_security_check") }}" method="post" role="form">
                    <input type="hidden" name="_csrf_token" value="{{ csrf_token }}"/>

                    <div class="form-group has-feedback">
                        <input type="text" class="form-control" id="username" name="_username"
                               value="{{ last_username }}" required="required"
                               placeholder="{{ 'security.login.username'|trans({}, 'FOSUserBundle') }}"/>
                        <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    </div>

                    <div class="form-group has-feedback">
                        <input type="password" class="form-control" id="password" name="_password" required="required"
                               placeholder="{{ 'security.login.password'|trans({}, 'FOSUserBundle') }}"/>
                        <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    </div>

                    <div class="row">
                        <div class="col-xs-8">
                            <div class="checkbox icheck">
                                <label>
                                    <input type="checkbox" id="remember_me" name="_remember_me" value="on"/>
                                    {{ 'security.login.remember_me'|trans({}, 'FOSUserBundle') }}
                                </label>
                            </div>
                        </div>
                        <div class="col-xs-4">
                            <button type="submit"
                                    class="btn btn-primary btn-block btn-flat">{{ 'security.login.submit'|trans({}, 'FOSUserBundle') }}</button>
                        </div>
                    </div>
                </form>

                {#<a href="{{ path('sonata_user_admin_resetting_request') }}">{{ 'forgotten_password'|trans({}, 'FOSUserBundle') }}</a>#}
                <a href="{{ path('fos_user_resetting_request') }}">{{ 'resetting.request.submit'|trans({}, 'FOSUserBundle') }}</a>
            {% endblock %}
        </div>
    </div>

{% endblock sonata_wrapper %}
